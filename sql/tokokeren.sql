CREATE SCHEMA TOKOKEREN;
SET SEARCH_PATH TO TOKOKEREN;

CREATE TABLE PENGGUNA (
	email VARCHAR(50),
	password VARCHAR(20) NOT NULL,
	nama VARCHAR(100) NOT NULL,
	jenis_kelamin CHAR(1),
	tgl_lahir DATE NOT NULL,
	no_telp VARCHAR(20) NOT NULL,
	alamat TEXT NOT NULL,
	PRIMARY KEY (email)

);
CREATE TABLE PELANGGAN (
	email VARCHAR(50),
	is_penjual BOOLEAN,
	nilai_reputasi NUMERIC(10,1),
	poin INT,
	PRIMARY KEY (email),
	FOREIGN KEY (email) REFERENCES PENGGUNA(email) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE TOKO (
	nama VARCHAR(100),
	deskripsi TEXT,
	slogan VARCHAR(100),
	lokasi TEXT NOT NULL,
	email_penjual VARCHAR(50) NOT NULL,
	PRIMARY KEY (nama),
	FOREIGN KEY (email_penjual) REFERENCES PENGGUNA(email) ON UPDATE CASCADE ON DELETE CASCADE
	
);
CREATE TABLE JASA_KIRIM (
	nama VARCHAR(100),
	lama_kirim VARCHAR(10) NOT NULL,
	tarif NUMERIC(10,2) NOT NULL,
	PRIMARY KEY (nama)
);
CREATE TABLE TOKO_JASA_KIRIM (
	nama_toko VARCHAR(100),
	jasa_kirim VARCHAR(100),
	PRIMARY KEY (nama_toko, jasa_kirim),
	FOREIGN KEY (nama_toko) REFERENCES ON TOKO(nama) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (jasa_kirim) REFERENCES ON JASA_KIRIM(nama) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE KATEGORI_UTAMA (
	kode CHAR(3),
	nama VARCHAR(100) NOT NULL,
	PRIMARY KEY(kode)
);
CREATE TABLE SUB_KATEGORI (
	kode CHAR(5) ,
	kode_kategori CHAR(3) NOT NULL,
	nama VARCHAR(100) NOT NULL,
	PRIMARY KEY (kode),
	FOREIGN KEY (kode_kategori) REFERENCES ON KATEGORI_UTAMA(kode) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE PRODUK (
	kode_produk CHAR(8),
	nama VARCHAR(100) NOT NULL,
	harga NUMERIC(10,2) NOT NULL,
	deskripsi TEXT,
	PRIMARY KEY(kode_produk)
);
CREATE TABLE PRODUK_PULSA (
	kode_produk CHAR(8),
	nominal INT NOT NULL,
	PRIMARY KEY (kode_produk),
	FOREIGN KEY (kode_produk) REFERENCES ON PRODUK(kode_produk) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE SHIPPED_PRODUK (
	kode_produk CHAR(8),
	kategori CHAR(5) NOT NULL,
	nama_toko VARCHAR(100) NOT NULL,
	is_asuransi BOOLEAN NOT NULL,
	stok INT NOT NULL,
	is_baru BOOLEAN NOT NULL,
	min_order INT NOT NULL,
	min_grosir INT NOT NULL,
	max_grosir INT NOT NULL,
	harga_grosir NUMERIC(10,2) NOT NULL,
	foto VARCHAR(100) NOT NULL,
	PRIMARY KEY (kode_produk),
	PRIMARY KEY (kode_produk) REFERENCES ON PRODUK(kode_produk) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (kategori) REFERENCES ON SUB_KATEGORI(nama) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (nama_toko) REFERENCES ON TOKO(nama) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE TRANSAKSI_SHIPPED(
	no_invoice CHAR(10),
	tanggal DATE NOT NULL,
	waktu_bayar TIMESTAMP,
	status SMALLINT,
	total_bayar NUMERIC(10,2) NOT NULL,
	email_pembeli VARCHAR(50) NOT NULL,
	nama_toko VARCHAR(100) NOT NULL,
	alamat_kirim TEXT NOT NULL,
	biaya_kirim NUMERIC(10,2) NOT NULL,
	no_resi CHAR(16),
	nama_jasa_kirim VARCHAR(16) NOT NULL,
	PRIMARY KEY (no_invoice),
	FOREIGN KEY ,
	FOREIGN KEY,
	FOREIGN KEY
);
CREATE TABLE TRANSAKSI_PULSA (
	no_invoice CHAR(10),
	tanggal DATE NOT NULL,
	waktu_bayar TIMESTAMP,
	status SMALLINT,
	total_bayar NUMERIC(10,2) NOT NULL,
	email_pembeli VARCHAR(50) NOT NULL,
	nominal INT NOT NULL,
	nomor VARCHAR(20) NOT NULL,
	kode_produk CHAR(8) NOT NULL,
	PRIMARY KEY (no_invoice),
	FOREIGN KEY (email_pembeli) REFERENCES ON PELANGGAN(email) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (kode_produk) REFERENCES ON PRODUK_PULSA(kode_produk) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PROMO (
	id CHAR(6),
	deskripsi text,
	periode_awal DATE NOT NULL,
	periode_akhir DATE NOT NULL,
	kode VARCHAR(20) NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE PROMO_PRODUK(
	id_promo CHAR(6),
	kode_produk CHAR(8),
	PRIMARY KEY(id_promo, kode_produk),
	FOREIGN KEY (id_promo) REFERENCES ON PROMO(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (kode_produk) REFERENCES ON PRODUK(kode_produk)	ON UPDATE CASCADE ON DELETE CASCADE	
);

CREATE TABLE ULASAN (
	email_pembeli,
	kode_produk,
	tanggal,
	rating,
	komentar,
	PRIMARY KEY,
	FOREIGN KEY,
	FOREIGN KEY
);
CREATE TABLE KOMENTAR_DISKUSI (
	pengirim,
	penerima,
	waktu,
	komentar,
);
CREATE TABLE LIST_ITEM (
	no_invoice,
	kode_produk,
	berat,
	kuantitas,
	harga,
	sub_total
);
CREATE TABLE KERANJANG_BELANJA (
	pembeli,
	kode_produk,
	berat,
	kuantitas,
	harga,
	sub_total
	PRIMARY KEY
	FOREIGN KEY
);